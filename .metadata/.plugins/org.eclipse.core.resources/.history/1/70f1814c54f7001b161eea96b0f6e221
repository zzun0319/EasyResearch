package com.junhee.EasyResearch.Model;

import java.sql.Date;
import java.sql.Timestamp;

public class TmpDateTimeDTO {

	private Date researchDate;
	private Date sDate;
	private Date eDate;
	private String sTime_str;
	private String eTime_str;
	private Time sTime;
	
	private Timestamp sTimestamp;
	private Timestamp eTimeStamp;
	
	public TmpDateTimeDTO() {}

	////////// 장소를 사용 중인 날짜 조회 시 사용할 생성자 //////////////////////////////////////////////////////////
	
	public TmpDateTimeDTO(Date sDate, Date eDate) {
		this.sDate = sDate;
		this.eDate = eDate;
		setPeriodForInquiry();
	}
	
	public void setPeriodForInquiry() { // 두 날짜를 입력 받으면 그 날짜들을 타임스탬프 형식으로 만들어주는 메서드
		sTimestamp = Timestamp.valueOf(sDate + " 00:00:00");
		eTimeStamp = Timestamp.valueOf(eDate + " 00:00:00");
	}
	
	//////////////////////////////////////////////////////////////////////////////////////////////
	
	public TmpDateTimeDTO(String researchDate, String sTime, int duration) {
		this.researchDate = researchDate;
		this.sDate = researchDate;
		this.sTime = sTime + ":00";
		this.eTime = makeEndTimeEndDate(duration) + ":00";
		setResearchTimestamps();
	}

	public void setResearchTimestamps() { // Timeslot객체에 넣어주기 위한 Timestamp들을 만들어주는 메서드
		sTimestamp = Timestamp.valueOf(researchDate + " " + sTime);
		eTimeStamp = Timestamp.valueOf(researchDate + " " + eTime);
		Time t = new Time(0);
		Date d = new Date(0);
	}
	
	
	public String makeEndTimeEndDate(int duration) {
		String times[] = sTime.split(":");
		int hour = Integer.parseInt(times[0]);
		int minute = Integer.parseInt(times[1]);
		return "";
	}

	public Timestamp getsTimestamp() {
		return sTimestamp;
	}

	public Timestamp geteTimeStamp() {
		return eTimeStamp;
	}
	
}
